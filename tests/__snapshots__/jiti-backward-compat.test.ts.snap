// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`backward compat snapshots with jiti > ./async/index.js > stdout-jiti 1`] = `"works"`;

exports[`backward compat snapshots with jiti > ./async/index.js > stdout-unrun 1`] = `"works"`;

exports[`backward compat snapshots with jiti > ./circular/index.js > stdout-jiti 1`] = `"a b c"`;

exports[`backward compat snapshots with jiti > ./circular/index.js > stdout-unrun 1`] = `"a b c"`;

exports[`backward compat snapshots with jiti > ./cjs-interop/index.cjs > stdout-jiti 1`] = `"CJS function default interop test passed"`;

exports[`backward compat snapshots with jiti > ./cjs-interop/index.cjs > stdout-unrun 1`] = `"CJS function default interop test passed"`;

exports[`backward compat snapshots with jiti > ./data-uri/index.ts > stdout-jiti 1`] = `""`;

exports[`backward compat snapshots with jiti > ./data-uri/index.ts > stdout-unrun 1`] = `""`;

exports[`backward compat snapshots with jiti > ./deps/index.ts > stdout-jiti 1`] = `
"npm:config: true
npm:defu {}
npm:destr true
npm:etag: true
npm:is-installed-globally false
npm:mime: true
npm:typescript: true
npm:moment-timezone true
npm:zod: true"
`;

exports[`backward compat snapshots with jiti > ./deps/index.ts > stdout-unrun 1`] = `
"npm:config: true
npm:defu {}
npm:destr true
npm:etag: true
npm:is-installed-globally false
npm:mime: true
npm:typescript: true
npm:moment-timezone true
npm:zod: true"
`;

exports[`backward compat snapshots with jiti > ./env/index.js > stdout-jiti 1`] = `
"process.env true
process.env.TEST true
process.env?.TEST true
import.meta true
import.meta.env.TEST true
import.meta.env?.TEST true"
`;

exports[`backward compat snapshots with jiti > ./env/index.js > stdout-unrun 1`] = `
"process.env true
process.env.TEST true
process.env?.TEST true
import.meta true
import.meta.env.TEST true
import.meta.env?.TEST true"
`;

exports[`backward compat snapshots with jiti > ./esm/index.js > stdout-jiti 1`] = `
"{ utilsLib: { utils: { a: 'a', default: 'default' }, version: '123' } }
{ utils: { a: 'a', default: 'default' } }
{
  file: '<cwd><path>',
  dir: '<cwd>',
  'import.meta.url': 'file://<cwd><path>'
}"
`;

exports[`backward compat snapshots with jiti > ./esm/index.js > stdout-unrun 1`] = `
"{ utilsLib: { utils: { a: 'a', default: 'default' }, version: '123' } }
{ utils: { a: 'a', default: 'default' } }
{
  file: '<cwd><path>',
  dir: '<cwd>',
  'import.meta.url': 'file://<cwd><path>'
}"
`;

exports[`backward compat snapshots with jiti > ./hashbang/index.ts > stdout-jiti 1`] = `"1"`;

exports[`backward compat snapshots with jiti > ./hashbang/index.ts > stdout-unrun 1`] = `"1"`;

exports[`backward compat snapshots with jiti > ./import-map/index.mjs > stdout-jiti 1`] = `"{ alias: 'alias' }"`;

exports[`backward compat snapshots with jiti > ./import-map/index.mjs > stdout-unrun 1`] = `"{ alias: 'alias' }"`;

exports[`backward compat snapshots with jiti > ./import-meta/index.ts > stdout-jiti 1`] = `
"hello! { hello: 'world' }
file://<cwd><path>
hello! custom
file://<cwd><path>+custom.ts
import.meta.dirname: <cwd>
import.meta.filename: <cwd><path>"
`;

exports[`backward compat snapshots with jiti > ./import-meta/index.ts > stdout-unrun 1`] = `
"hello! { hello: 'world' }
file://<cwd><path>
hello! custom
file://<cwd><path>+custom.ts
import.meta.dirname: <cwd>
import.meta.filename: <cwd><path>"
`;

exports[`backward compat snapshots with jiti > ./json/index.ts > stdout-jiti 1`] = `
"Imported : { test: 123 } .default: { test: 123 }
Imported with assertion : { test: 123 } .default: { test: 123 }
Required : { test: 123 } .default: { test: 123 }
Dynamic Imported : [Object: null prototype] { default: { test: 123 }, test: 123 } .default: { test: 123 }"
`;

exports[`backward compat snapshots with jiti > ./json/index.ts > stdout-unrun 1`] = `
"Imported : { test: 123 } .default: { test: 123 }
Imported with assertion : { test: 123 } .default: { test: 123 }
Required : { test: 123 } .default: { test: 123 }
Dynamic Imported : [Object: null prototype] { default: { test: 123 }, test: 123 } .default: { test: 123 }"
`;

exports[`backward compat snapshots with jiti > ./jsx/index.ts > stdout-jiti 1`] = `
"<h1>Hello, nano-jsx!<<path>>
<h1>Hello, preact!<<path>>
<h1>Hello, react!<<path>>
<h1>Hello, vue!<<path>>"
`;

exports[`backward compat snapshots with jiti > ./jsx/index.ts > stdout-unrun 1`] = `
"<h1>Hello, nano-jsx!<<path>>
<h1>Hello, preact!<<path>>
<h1>Hello, react!<<path>>
<h1>Hello, vue!<<path>>"
`;

exports[`backward compat snapshots with jiti > ./mixed/index.cjs > stdout-jiti 1`] = `"Mixed works for: <root>"`;

exports[`backward compat snapshots with jiti > ./mixed/index.cjs > stdout-unrun 1`] = `"Mixed works for: <root>"`;

exports[`backward compat snapshots with jiti > ./native/index.js > stdout-jiti 1`] = `"[Module: null prototype] { default: { hasRequire: false } }"`;

exports[`backward compat snapshots with jiti > ./native/index.js > stdout-unrun 1`] = `"[Module: null prototype] { default: { hasRequire: false } }"`;

exports[`backward compat snapshots with jiti > ./node/index.mts > stdout-jiti 1`] = `"node:test true"`;

exports[`backward compat snapshots with jiti > ./node/index.mts > stdout-unrun 1`] = `"node:test true"`;

exports[`backward compat snapshots with jiti > ./proto/index.js > stdout-jiti 1`] = `"exists: true"`;

exports[`backward compat snapshots with jiti > ./proto/index.js > stdout-unrun 1`] = `"exists: true"`;

exports[`backward compat snapshots with jiti > ./pure-esm-dep/index.js > stdout-jiti 1`] = `
"Enter Program
Enter VariableDeclaration
Enter VariableDeclarator
Enter Identifier
Enter Literal"
`;

exports[`backward compat snapshots with jiti > ./pure-esm-dep/index.js > stdout-unrun 1`] = `
"Enter Program
Enter VariableDeclaration
Enter VariableDeclarator
Enter Identifier
Enter Literal"
`;

exports[`backward compat snapshots with jiti > ./require-esm/index.cjs > stdout-jiti 1`] = `"Works!"`;

exports[`backward compat snapshots with jiti > ./require-esm/index.cjs > stdout-unrun 1`] = `"Works!"`;

exports[`backward compat snapshots with jiti > ./require-json/index.js > stdout-jiti 1`] = `"{ type: 'commonjs' }"`;

exports[`backward compat snapshots with jiti > ./require-json/index.js > stdout-unrun 1`] = `"{ type: 'commonjs' }"`;

exports[`backward compat snapshots with jiti > ./syntax/index.ts > stdout-jiti 1`] = `
"Optional chaining: undefined
Nullish coalescing: 0
Logical or assignment: 50 title is empty.
Logical nullish assignment: 50 20"
`;

exports[`backward compat snapshots with jiti > ./syntax/index.ts > stdout-unrun 1`] = `
"Optional chaining: undefined
Nullish coalescing: 0
Logical or assignment: 50 title is empty.
Logical nullish assignment: 50 20"
`;

exports[`backward compat snapshots with jiti > ./top-level-await/index.ts > stdout-jiti 1`] = `"async value works from sub module"`;

exports[`backward compat snapshots with jiti > ./top-level-await/index.ts > stdout-unrun 1`] = `"async value works from sub module"`;

exports[`backward compat snapshots with jiti > ./typescript/index.ts > stdout-jiti 1`] = `
"Decorator metadata keys: design:type
Decorator called with 3 arguments.
Decorator called with 3 arguments.
Decorator called with 3 arguments.
Decorator called with 1 arguments.
{
  file: '<cwd><path>',
  dir: '<cwd>',
  resolve: '<cwd><path>'
} [class DecoratedClass]
{
  satisfiesTest: {
    firstTest: { name: 'first', avatar: 'https:<path>' },
    secondTest: { name: 'second', avatar: [Object] },
    normalizeUserEntity: [Function: normalizeUserEntity]
  }
}
child
promise resolved"
`;

exports[`backward compat snapshots with jiti > ./typescript/index.ts > stdout-unrun 1`] = `
"Decorator metadata keys: design:type
Decorator called with 3 arguments.
Decorator called with 3 arguments.
Decorator called with 3 arguments.
Decorator called with 1 arguments.
{
  file: '<cwd><path>',
  dir: '<cwd>',
  resolve: '<cwd><path>'
} [class DecoratedClass]
{
  satisfiesTest: {
    firstTest: { name: 'first', avatar: 'https:<path>' },
    secondTest: { name: 'second', avatar: [Object] },
    normalizeUserEntity: [Function: normalizeUserEntity]
  }
}
child
promise resolved"
`;
